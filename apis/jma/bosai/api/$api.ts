// This file is automatically generated
/* eslint-disable */
import { AspidaClient } from 'aspida'
import { Methods as Methods0 } from './himawari/data/satimg/_basetime/fd/_validtime/_band_prod/_z@number/_x@number/_y@number.jpg'
import { Methods as Methods1 } from './himawari/data/satimg/_basetime/jp/_validtime/_band_prod/6/_x@number/_y@number.jpg'
import { Methods as Methods2 } from './himawari/data/satimg/targetTimes_fd.json'
import { Methods as Methods3 } from './himawari/data/satimg/targetTimes_jp.json'

const api = <T>({ baseURL, fetch }: AspidaClient<T>) => {
  const prefix = (baseURL === undefined ? 'https://www.jma.go.jp/bosai' : baseURL).replace(/\/$/, '')
  const PATH0 = '/himawari/data/satimg'
  const PATH1 = '/fd'
  const PATH2 = '/jp'
  const PATH3 = '/6'
  const PATH4 = '/himawari/data/satimg/targetTimes_fd.json'
  const PATH5 = '/himawari/data/satimg/targetTimes_jp.json'
  const GET = 'GET'

  return {
    himawari: {
      data: {
        satimg: {
          _basetime: (val3: number | string) => {
            const prefix3 = `${PATH0}/${val3}`

            return {
              fd: {
                _validtime: (val5: number | string) => {
                  const prefix5 = `${prefix3}${PATH1}/${val5}`

                  return {
                    _band_prod: (val6: number | string) => {
                      const prefix6 = `${prefix5}/${val6}`

                      return {
                        _z: (val7: number) => {
                          const prefix7 = `${prefix6}/${val7}`

                          return {
                            _x: (val8: number) => {
                              const prefix8 = `${prefix7}/${val8}`

                              return {
                                /**
                                 * フルディスク画像API
                                 * 
                                 * _basetime: 撮影時間 TargetTime['basetime']
                                 * _validtime: 撮影時間 TargetTime['validtime']
                                 * _band_prod: 画像種別 BAND_PROD
                                 * _z: ズームレベル 3-5
                                 * _x: タイルのX座標
                                 * _y: タイルのY座標
                                 */
                                _y_jpg: (val9: number) => {
                                  const prefix9 = `${prefix8}/${val9}.jpg`

                                  return {
                                    /**
                                     * フルディスク画像をJPGで取得
                                     */
                                    get: (option?: { config?: T }) =>
                                      fetch<Methods0['get']['resBody']>(prefix, prefix9, GET, option).arrayBuffer(),
                                    /**
                                     * フルディスク画像をJPGで取得
                                     */
                                    $get: (option?: { config?: T }) =>
                                      fetch<Methods0['get']['resBody']>(prefix, prefix9, GET, option).arrayBuffer().then(r => r.body),
                                    $path: () => `${prefix}${prefix9}`
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              jp: {
                _validtime: (val5: number | string) => {
                  const prefix5 = `${prefix3}${PATH2}/${val5}`

                  return {
                    _band_prod: (val6: number | string) => {
                      const prefix6 = `${prefix5}/${val6}`

                      return {
                        $6: {
                          _x: (val8: number) => {
                            const prefix8 = `${prefix6}${PATH3}/${val8}`

                            return {
                              /**
                               * 日本付近画像API
                               * 
                               * _basetime: 撮影時間 TargetTime['basetime']
                               * _validtime: 撮影時間 TargetTime['validtime']
                               * _band_prod: 画像種別 BAND_PROD
                               * _x: タイルのX座標
                               * _y: タイルのY座標
                               */
                              _y_jpg: (val9: number) => {
                                const prefix9 = `${prefix8}/${val9}.jpg`

                                return {
                                  /**
                                   * 日本付近画像をJPGで取得
                                   */
                                  get: (option?: { config?: T }) =>
                                    fetch<Methods1['get']['resBody']>(prefix, prefix9, GET, option).arrayBuffer(),
                                  /**
                                   * 日本付近画像をJPGで取得
                                   */
                                  $get: (option?: { config?: T }) =>
                                    fetch<Methods1['get']['resBody']>(prefix, prefix9, GET, option).arrayBuffer().then(r => r.body),
                                  $path: () => `${prefix}${prefix9}`
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          /**
           * 撮影時刻API
           */
          targetTimes_fd_json: {
            /**
             * 撮影時刻一覧を取得
             */
            get: (option?: { config?: T }) =>
              fetch<Methods2['get']['resBody']>(prefix, PATH4, GET, option).json(),
            /**
             * 撮影時刻一覧を取得
             */
            $get: (option?: { config?: T }) =>
              fetch<Methods2['get']['resBody']>(prefix, PATH4, GET, option).json().then(r => r.body),
            $path: () => `${prefix}${PATH4}`
          },
          /**
           * 日本付近の撮影時刻API
           */
          targetTimes_jp_json: {
            /**
             * 日本付近の撮影時刻一覧を取得
             */
            get: (option?: { config?: T }) =>
              fetch<Methods3['get']['resBody']>(prefix, PATH5, GET, option).json(),
            /**
             * 日本付近の撮影時刻一覧を取得
             */
            $get: (option?: { config?: T }) =>
              fetch<Methods3['get']['resBody']>(prefix, PATH5, GET, option).json().then(r => r.body),
            $path: () => `${prefix}${PATH5}`
          }
        }
      }
    }
  }
}

export type ApiInstance = ReturnType<typeof api>
export * from './@types'
export * from './@constants'
export default api
